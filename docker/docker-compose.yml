#docker-compose.yml
#- mysql:5.7
#- web from DockerfileWeb (build is required)
version: '2'
services:
  # MySQL
  mysql:
    image: mysql:5.7
    container_name: question-mysql
    ports:
      - "4306:3306"
    volumes:
      - ./mysql/conf:/etc/mysql/conf.d
      - ./mysql/db_data:/var/lib/mysql
      - ./mysql/init.d:/docker-entrypoint-initdb.d
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: questionnaire
      MYSQL_USER: hiromaily
      MYSQL_PASSWORD: 12345678
  # golang:api-server
  api:
    build:
      context: ./api/
    image: go-question-api:1.0
    container_name: question-api
    ports:
      - "8083:8083"
    volumes:
      - ./api/logs:/var/log/questionnaire
      - ${GOPATH}/src/github.com/hiromaily/go-questionnaires/api:/go/src/github.com/hiromaily/go-questionnaires/api
    links:
      - mysql:mysql-server
    depends_on:
      - mysql
    stdin_open: true
    tty: true
    restart: always
    command: bash
    #command: bash /docker-entrypoint.sh
  # nodejs:backoffice-server
  back-office:
    build:
      context: ./backoffice/
    image: node-question-backoffice:1.0
    container_name: question-backoffice
    ports:
      - "8082:8082"
    volumes:
      - ./backoffice/logs:/var/log/questionnaire
      - ${GOPATH}/src/github.com/hiromaily/go-questionnaires/back-office:/usr/src/back-office
    stdin_open: true
    tty: true
    restart: always
    command: bash
  # Nginx
  nginx:
    build:
      context: ./nginx/
    image: nginxs:1.0
    container_name: question-nginx
    ports:
      - "8080:80"
    links:
      - api:api-server
      - back-office:back-server
    depends_on:
      - api
      - back-office
    restart: always
